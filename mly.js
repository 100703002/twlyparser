// Generated by LiveScript 1.2.0
(function(){
  var crypto, optimist, util, member, members, party, city, constituency, contact, res;
  crypto = require('crypto');
  optimist = require('optimist');
  util = require('./lib/util');
  member = optimist.argv.member;
  member == null && (member = 8);
  members = require("./data/mly/" + member);
  party = function(it){
    var ref$;
    switch (ref$ = [it], false) {
    case '中國國民黨' !== ref$[0]:
      return 'KMT';
    case '民主進步黨' !== ref$[0]:
      return 'DPP';
    case '台灣團結聯盟' !== ref$[0]:
      return 'TSU';
    case '無黨團結聯盟' !== ref$[0]:
      return 'NSU';
    case '親民黨' !== ref$[0]:
      return 'PFP';
    case '新黨' !== ref$[0]:
      return 'NP';
    case '建國黨' !== ref$[0]:
      return 'TIP';
    case '超黨派問政聯盟' !== ref$[0]:
      return 'CPU';
    case '民主聯盟' !== ref$[0]:
      return 'DU';
    case '新國家陣線' !== ref$[0]:
      return 'NNA';
    case !/無(黨籍)?/.test(ref$[0]):
      return null;
    case '其他' !== ref$[0]:
      return null;
    default:
      return console.error(it);
    }
  };
  city = function(it){
    var ref$;
    switch (ref$ = [it.replace(/台/g, '臺')], false) {
    case '新北市' !== ref$[0]:
      return 'TPQ';
    case '臺北市' !== ref$[0]:
      return 'TPE';
    case '臺中市' !== ref$[0]:
      return 'TXG';
    case '臺南市' !== ref$[0]:
      return 'TNN';
    case '高雄市' !== ref$[0]:
      return 'KHH';
    case '基隆市' !== ref$[0]:
      return 'KEE';
    case '新竹市' !== ref$[0]:
      return 'HSZ';
    case '嘉義市' !== ref$[0]:
      return 'CYI';
    case '桃園縣' !== ref$[0]:
      return 'TAO';
    case '新竹縣' !== ref$[0]:
      return 'HSQ';
    case '苗栗縣' !== ref$[0]:
      return 'MIA';
    case '彰化縣' !== ref$[0]:
      return 'CHA';
    case '南投縣' !== ref$[0]:
      return 'NAN';
    case '雲林縣' !== ref$[0]:
      return 'YUN';
    case '嘉義縣' !== ref$[0]:
      return 'CYQ';
    case '屏東縣' !== ref$[0]:
      return 'PIF';
    case '宜蘭縣' !== ref$[0]:
      return 'ILA';
    case '花蓮縣' !== ref$[0]:
      return 'HUA';
    case '臺東縣' !== ref$[0]:
      return 'TTT';
    case '澎湖縣' !== ref$[0]:
      return 'PEN';
    case '高雄縣' !== ref$[0]:
      return 'KHQ';
    case '臺南縣' !== ref$[0]:
      return 'TNQ';
    case '臺北縣' !== ref$[0]:
      return 'TPQ';
    case '臺中縣' !== ref$[0]:
      return 'TXQ';
    case '金門縣' !== ref$[0]:
      return 'JME';
    case '連江縣' !== ref$[0]:
      return 'LJF';
    default:
      return console.error(it);
    }
  };
  constituency = function(it){
    var ref$, that, area;
    switch (ref$ = [it], false) {
    case !/^.*(市|縣)$/.test(ref$[0]):
      return [city(it), 0];
    case !(that = /(.*(?:市|縣))(?:第(\S+))?選舉區/.exec(ref$[0])):
      area = that[2];
      return [city(that[1]), area != null ? util.intOfZHNumber(area) : 0];
    case !(that = /(平地|山地)原住民/.exec(ref$[0])):
      return ['aborigine', that[1] === '平地' ? 'lowland' : 'highland'];
    case !/全國不分區/.test(ref$[0]):
      return ['proportional'];
    case !/僑居國外國民|僑選/.test(ref$[0]):
      return ['foreign'];
    default:
      return console.error(it);
    }
  };
  console.error(members.length);
  contact = function(phone, address, facsimile){
    var phones, res$, i$, len$, ref$, k, v, fax, office, name, results$ = {};
    phone = phone.map(function(it){
      return it.split('：');
    });
    address = address.map(function(it){
      return it.split('：');
    });
    facsimile = facsimile.map(function(it){
      return it.split('：');
    });
    res$ = {};
    for (i$ = 0, len$ = phone.length; i$ < len$; ++i$) {
      ref$ = phone[i$], k = ref$[0], v = ref$[1];
      res$[k] = v;
    }
    phones = res$;
    res$ = {};
    for (i$ = 0, len$ = facsimile.length; i$ < len$; ++i$) {
      ref$ = facsimile[i$], k = ref$[0], v = ref$[1];
      res$[k] = v;
    }
    fax = res$;
    res$ = {};
    for (i$ = 0, len$ = address.length; i$ < len$; ++i$) {
      ref$ = address[i$], k = ref$[0], v = ref$[1];
      res$[k] = v;
    }
    address = res$;
    res$ = [];
    for (name in (fn$())) {
      res$.push(name);
    }
    office = res$;
    for (i$ = 0, len$ = office.length; i$ < len$; ++i$) {
      name = office[i$];
      results$[name] = {
        phone: phones[name],
        address: address[name],
        fax: fax[name]
      };
    }
    return results$;
    function fn$(){
      var i$, ref$, len$, results$ = {};
      for (i$ = 0, len$ = (ref$ = Object.keys(phones).concat(Object.keys(address), Object.keys(fax))).length; i$ < len$; ++i$) {
        k = ref$[i$];
        results$[k] = 1;
      }
      return results$;
    }
  };
  res = members.map(function(m){
    var key, ref$;
    key = crypto.createHash('md5').update("MLY/" + m.姓名, 'utf8').digest('hex');
    return {
      name: m.姓名,
      party: party(m.黨籍),
      caucus: party(m.黨團),
      constituency: constituency(m.選區),
      contact: contact(m.電話, m.通訊處, m.傳真),
      avatar: "http://avatars.io/50a65bb26e293122b0000073/" + key,
      assume: (ref$ = m.到職日期) != null ? ref$.replace(/\//g, '-') : void 8
    };
  });
  console.log(JSON.stringify(res, null, 4));
}).call(this);
